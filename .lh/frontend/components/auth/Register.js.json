{
    "sourceFile": "frontend/components/auth/Register.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1664962796202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1664962801734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n //import firebase from 'firebase';\n+import firebase from 'firebase/compat/app';\n import React, { useState } from 'react';\n import { Button, Text, TextInput, View } from 'react-native';\n import { Snackbar } from 'react-native-paper';\n import { container, form } from '../styles';\n"
                },
                {
                    "date": 1665297345241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,8 +107,7 @@\n                 onDismiss={() => { setIsValid({ boolSnack: false }) }}>\n                 {isValid.message}\n             </Snackbar>\n         </View>\n-\n     )\n }\n \n"
                },
                {
                    "date": 1668734103401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,9 @@\n-//import firebase from 'firebase';\n+/*Tyler Wiggins\n+This is my own work\n+Senior Project 2022\n+File Description: This class handles the registration credentials.\n+*/\n import firebase from 'firebase/compat/app';\n import React, { useState } from 'react';\n import { Button, Text, TextInput, View } from 'react-native';\n import { Snackbar } from 'react-native-paper';\n@@ -13,8 +17,9 @@\n     const [name, setName] = useState('');\n     const [username, setUsername] = useState('');\n     const [isValid, setIsValid] = useState(true);\n \n+    //Validates the data entered and sends it to the database if the data is valid.\n     const onRegister = () => {\n         if (name.lenght == 0 || username.lenght == 0 || email.length == 0 || password.length == 0) {\n             setIsValid({ bool: true, boolSnack: true, message: \"Please fill out everything\" })\n             return;\n@@ -61,8 +66,9 @@\n \n     }\n \n     return (\n+        //Shows the view of the register form and textboxes that collect the users credentials.\n         <View style={container.center}>\n             <View style={container.formCenter}>\n                 <TextInput\n                     style={form.textInput}\n"
                }
            ],
            "date": 1664962796202,
            "name": "Commit-0",
            "content": "//import firebase from 'firebase';\nimport React, { useState } from 'react';\nimport { Button, Text, TextInput, View } from 'react-native';\nimport { Snackbar } from 'react-native-paper';\nimport { container, form } from '../styles';\n\nrequire('firebase/firestore');\n\nexport default function Register(props) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [isValid, setIsValid] = useState(true);\n\n    const onRegister = () => {\n        if (name.lenght == 0 || username.lenght == 0 || email.length == 0 || password.length == 0) {\n            setIsValid({ bool: true, boolSnack: true, message: \"Please fill out everything\" })\n            return;\n        }\n        if (password.length < 6) {\n            setIsValid({ bool: true, boolSnack: true, message: \"passwords must be at least 6 characters\" })\n            return;\n        }\n        if (password.length < 6) {\n            setIsValid({ bool: true, boolSnack: true, message: \"passwords must be at least 6 characters\" })\n            return;\n        }\n        firebase.firestore()\n            .collection('users')\n            .where('username', '==', username)\n            .get()\n            .then((snapshot) => {\n\n                if (!snapshot.exist) {\n                    firebase.auth().createUserWithEmailAndPassword(email, password)\n                        .then(() => {\n                            if (snapshot.exist) {\n                                return\n                            }\n                            firebase.firestore().collection(\"users\")\n                                .doc(firebase.auth().currentUser.uid)\n                                .set({\n                                    name,\n                                    email,\n                                    username,\n                                    image: 'default',\n                                    followingCount: 0,\n                                    followersCount: 0,\n\n                                })\n                        })\n                        .catch(() => {\n                            setIsValid({ bool: true, boolSnack: true, message: \"Something went wrong\" })\n                        })\n                }\n            }).catch(() => {\n                setIsValid({ bool: true, boolSnack: true, message: \"Something went wrong\" })\n            })\n\n    }\n\n    return (\n        <View style={container.center}>\n            <View style={container.formCenter}>\n                <TextInput\n                    style={form.textInput}\n                    placeholder=\"Username\"\n                    value={username}\n                    keyboardType=\"twitter\"\n                    onChangeText={(username) => setUsername(username.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/\\s+/g, '').replace(/[^a-z0-9]/gi, ''))}\n                />\n                <TextInput\n                    style={form.textInput}\n                    placeholder=\"name\"\n                    onChangeText={(name) => setName(name)}\n                />\n                <TextInput\n                    style={form.textInput}\n                    placeholder=\"email\"\n                    onChangeText={(email) => setEmail(email)}\n                />\n                <TextInput\n                    style={form.textInput}\n                    placeholder=\"password\"\n                    secureTextEntry={true}\n                    onChangeText={(password) => setPassword(password)}\n                />\n\n                <Button\n                    style={form.button}\n                    onPress={() => onRegister()}\n                    title=\"Register\"\n                />\n            </View>\n\n            <View style={form.bottomButton} >\n                <Text\n                    onPress={() => props.navigation.navigate(\"Login\")} >\n                    Already have an account? SignIn.\n                </Text>\n            </View>\n            <Snackbar\n                visible={isValid.boolSnack}\n                duration={2000}\n                onDismiss={() => { setIsValid({ boolSnack: false }) }}>\n                {isValid.message}\n            </Snackbar>\n        </View>\n\n    )\n}\n\n"
        }
    ]
}