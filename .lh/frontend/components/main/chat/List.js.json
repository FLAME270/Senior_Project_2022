{
    "sourceFile": "frontend/components/main/chat/List.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1664962855360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1664962861526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { FontAwesome5 } from '@expo/vector-icons';\n-///import firebase from 'firebase';\n+//import firebase from 'firebase';\n+import firebase from 'firebase/compat/app';\n import React, { useEffect, useState } from 'react';\n import { FlatList, Image, Text, TouchableOpacity, View } from 'react-native';\n import { TextInput } from 'react-native-gesture-handler';\n import { Divider } from 'react-native-paper';\n"
                },
                {
                    "date": 1668734135718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,9 @@\n+/*Tyler Wiggins\n+This is my own work\n+Senior Project 2022\n+File Description: This is the core of the entire project, this class is the Main and handles all of the navigation and functionality of the entire application.\n+*/\n import { FontAwesome5 } from '@expo/vector-icons';\n //import firebase from 'firebase';\n import firebase from 'firebase/compat/app';\n import React, { useEffect, useState } from 'react';\n"
                },
                {
                    "date": 1668734141400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n /*Tyler Wiggins\n This is my own work\n Senior Project 2022\n-File Description: This is the core of the entire project, this class is the Main and handles all of the navigation and functionality of the entire application.\n+File Description: .\n */\n import { FontAwesome5 } from '@expo/vector-icons';\n //import firebase from 'firebase';\n import firebase from 'firebase/compat/app';\n"
                },
                {
                    "date": 1668734148466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n /*Tyler Wiggins\n This is my own work\n Senior Project 2022\n-File Description: .\n+File Description: This class lists all the .\n */\n import { FontAwesome5 } from '@expo/vector-icons';\n //import firebase from 'firebase';\n import firebase from 'firebase/compat/app';\n"
                },
                {
                    "date": 1668734159970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n /*Tyler Wiggins\n This is my own work\n Senior Project 2022\n-File Description: This class lists all the .\n+File Description: This class lists all the chats that you fallow.\n */\n import { FontAwesome5 } from '@expo/vector-icons';\n //import firebase from 'firebase';\n import firebase from 'firebase/compat/app';\n"
                },
                {
                    "date": 1668734177293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n /*Tyler Wiggins\n This is my own work\n Senior Project 2022\n-File Description: This class lists all the chats that you fallow.\n+File Description: This class lists all the chats that you follow.\n */\n import { FontAwesome5 } from '@expo/vector-icons';\n //import firebase from 'firebase';\n import firebase from 'firebase/compat/app';\n"
                },
                {
                    "date": 1668735444601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         setChats(props.chats)\n     }, [props.chats, props.users])\n \n \n-//\n+//W\n     const sendPost = (item) => {\n         if (item.sent != undefined) {\n             return;\n         }\n"
                }
            ],
            "date": 1664962855360,
            "name": "Commit-0",
            "content": "import { FontAwesome5 } from '@expo/vector-icons';\n///import firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, Image, Text, TouchableOpacity, View } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Divider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from '../../../redux/actions/index';\nimport { container, text, utils } from '../../styles';\nimport { timeDifference } from '../../utils';\nimport CachedImage from '../random/CachedImage';\n\nrequire('firebase/firestore')\n\n\n\nfunction Chat(props) {\n    const [chats, setChats] = useState([])\n    const [reload, setReload] = useState(false)\n    const [input, setInput] = useState(\"\")\n    const [caption, setCaption] = useState(\"\")\n    const [textInput, setTextInput] = useState(null)\n\n    useEffect(() => {\n        for (let i = 0; i < props.chats.length; i++) {\n            if (props.chats[i].hasOwnProperty('otherUser')) {\n                continue;\n            }\n            let otherUserId;\n            if (props.chats[i].users[0] == firebase.auth().currentUser.uid) {\n                otherUserId = props.chats[i].users[1];\n            } else {\n                otherUserId = props.chats[i].users[0];\n            }\n\n            const user = props.users.find(x => x.uid === otherUserId)\n            if (user == undefined) {\n                props.fetchUsersData(otherUserId, false)\n            } else {\n                props.chats[i].otherUser = user\n            }\n        }\n        setChats(props.chats)\n    }, [props.chats, props.users])\n\n\n\n    const sendPost = (item) => {\n        if (item.sent != undefined) {\n            return;\n        }\n        const textToSend = input;\n\n        setInput(\"\")\n\n        textInput.clear()\n\n        let post = props.route.params.post\n        delete post.doc\n        firebase.firestore()\n            .collection('chats')\n            .doc(item.id)\n            .collection('messages')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: textToSend,\n                post: post,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        firebase.firestore()\n            .collection('chats')\n            .doc(item.id)\n            .update({\n                lastMessage: \"post sent\",\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n            })\n\n\n        firebase.firestore()\n            .collection('chats')\n            .doc(item.id)\n            .update({\n                lastMessage: textToSend,\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                [item.users[0]]: false,\n                [item.users[1]]: false\n            })\n\n        props.navigation.popToTop()\n\n    }\n\n    let share = false;\n    let item = null;\n\n    if (props.route.params !== undefined) {\n        share = props.route.params.share\n        item = props.route.params.post\n    }\n\n\n    if (chats.length === 0) {\n        return (\n            <View style={{ height: '100%', justifyContent: 'center', margin: 'auto' }}>\n                <FontAwesome5 style={{ alignSelf: 'center', marginBottom: 20 }} name=\"comments\" size={40} color=\"black\" />\n                <Text style={[text.notAvailable]}>No chats notAvailable</Text>\n            </View>\n        )\n    }\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            {item != null ?\n                <View style={{ flexDirection: 'row', padding: 20 }}>\n                    <TextInput\n                        style={[container.fillHorizontal, container.input, container.container]}\n                        multiline={true}\n                        ref={setTextInput}\n                        placeholder=\"Write a message . . .\"\n                        onChangeText={(caption) => setInput(caption)}\n                    />\n                    {item.type == 1 ?\n                        <Image\n                            style={utils.profileImageSmall}\n                            source={{ uri: props.route.params.post.downloadURL }}\n                            styles={{ aspectRatio: 1 / 1, backgroundColor: 'black', height: 80 }}\n                        />\n                        :\n\n                        <CachedImage\n                            cacheKey={item.id}\n                            style={{ aspectRatio: 1 / 1, height: 80 }}\n                            source={{ uri: props.route.params.post.downloadURLStill }}\n                        />\n\n                    }\n                </View>\n                : null}\n\n            <Divider />\n            {chats.length !== 0 ?\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={chats}\n                    keyExtractor={(item, index) => item.id}\n                    renderItem={({ item }) => (\n\n                        <View style={!item[firebase.auth().currentUser.uid] ? { backgroundColor: '#d2eeff' } : null}>\n                            {item.otherUser == null ? (\n                                <FontAwesome5\n                                    style={[utils.profileImageSmall]}\n                                    name=\"user-circle\" size={35} color=\"black\" />\n                            )\n                                :\n                                (\n                                    <TouchableOpacity style={[utils.padding15, container.horizontal]}\n                                        activeOpacity={share ? 1 : 0}\n                                        onPress={() => {\n                                            if (!share) {\n                                                props.navigation.navigate(\"Chat\", { user: item.otherUser })\n\n                                            }\n                                        }}>\n\n                                        <View style={container.horizontal}>\n\n                                            {item.otherUser.image == 'default' ? (\n                                                <FontAwesome5\n                                                    style={[utils.profileImageSmall]}\n                                                    name=\"user-circle\" size={35} color=\"black\" />\n                                            )\n                                                :\n                                                (\n                                                    <Image\n                                                        style={[utils.profileImageSmall]}\n                                                        source={{\n                                                            uri: item.otherUser.image\n                                                        }} />\n                                                )}\n\n\n                                        </View>\n\n                                        <View>\n                                            <Text style={[text.bold]}>{item.otherUser.name}</Text>\n\n                                            <Text numberOfLines={1} ellipsizeMode='tail' style={[utils.margin15Right, utils.margin5Bottom, { paddingBottom: 10 }]}>\n                                                {item.lastMessage} {\" \"}\n                                                {item.lastMessageTimestamp == null ? (\n\n                                                    <Text style={[text.grey, text.small, utils.margin5Bottom]}>Now</Text>\n                                                ) : (\n                                                    <Text\n                                                        style={[text.grey, text.small, utils.margin5Bottom]}>\n                                                        {timeDifference(new Date(), item.lastMessageTimestamp.toDate())}\n                                                    </Text>\n                                                )}\n                                            </Text>\n                                        </View>\n\n                                        {share ? <TouchableOpacity\n                                            style={[utils.buttonOutlined, utils.margin15Right, { backgroundColor: '#0095ff', marginLeft: 'auto', justifyContent: 'center' }]}\n                                            onPress={() => sendPost(item)}>\n                                            <Text style={[text.bold, { color: 'white', textAlign: 'center', textAlignVertical: 'center' }]}>Send</Text>\n                                        </TouchableOpacity> :\n                                            null}\n\n\n\n                                    </TouchableOpacity>\n                                )}\n\n                        </View>\n\n                    )\n                    }\n                />\n\n                :\n\n                <View style={{ height: '100%', justifyContent: 'center', margin: 'auto' }}>\n                    <FontAwesome5 style={{ alignSelf: 'center', marginBottom: 20 }} name=\"comments\" size={40} color=\"black\" />\n                    <Text style={[text.notAvailable]}>No chats available</Text>\n                </View>\n            }\n        </View >\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    users: store.usersState.users,\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\n"
        }
    ]
}