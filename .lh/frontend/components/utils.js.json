{
    "sourceFile": "frontend/components/utils.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1668735913280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1668735921365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n Senior Project 2022\n File Description: utils sets a standard timestamp ecosystem that is used accross the platform.\n */\n \n-\n+//Determins \n function timeDifference(current, previous) {\n \n     var msPerMinute = 60 * 1000;\n     var msPerHour = msPerMinute * 60;\n"
                },
                {
                    "date": 1668735926970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n Senior Project 2022\n File Description: utils sets a standard timestamp ecosystem that is used accross the platform.\n */\n \n-//Determins \n+//Determins the timestamp\n function timeDifference(current, previous) {\n \n     var msPerMinute = 60 * 1000;\n     var msPerHour = msPerMinute * 60;\n"
                },
                {
                    "date": 1668735957632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n Senior Project 2022\n File Description: utils sets a standard timestamp ecosystem that is used accross the platform.\n */\n \n-//Determins the timestamp\n+//Determins the timestamp and sets \n function timeDifference(current, previous) {\n \n     var msPerMinute = 60 * 1000;\n     var msPerHour = msPerMinute * 60;\n"
                },
                {
                    "date": 1668735974308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n Senior Project 2022\n File Description: utils sets a standard timestamp ecosystem that is used accross the platform.\n */\n \n-//Determins the timestamp and sets \n+//Determins the timestamp and sets it according to how log its been since a post\n function timeDifference(current, previous) {\n \n     var msPerMinute = 60 * 1000;\n     var msPerHour = msPerMinute * 60;\n"
                },
                {
                    "date": 1668735984974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n Senior Project 2022\n File Description: utils sets a standard timestamp ecosystem that is used accross the platform.\n */\n \n-//Determins the timestamp and sets it according to how log its been since a post\n+//Determins the timestamp and sets it according to how log its been since a post, chat, or comment was made\n function timeDifference(current, previous) {\n \n     var msPerMinute = 60 * 1000;\n     var msPerHour = msPerMinute * 60;\n"
                }
            ],
            "date": 1668735913280,
            "name": "Commit-0",
            "content": "/*Tyler Wiggins\nThis is my own work\nSenior Project 2022\nFile Description: utils sets a standard timestamp ecosystem that is used accross the platform.\n*/\n\n\nfunction timeDifference(current, previous) {\n\n    var msPerMinute = 60 * 1000;\n    var msPerHour = msPerMinute * 60;\n    var msPerDay = msPerHour * 24;\n    var msPerMonth = msPerDay * 30;\n    var msPerYear = msPerDay * 365;\n\n    var elapsed = current - previous;\n\n    if (elapsed < msPerMinute) {\n        return 'Now';\n    }\n\n    else if (elapsed < msPerHour) {\n        return Math.round(elapsed / msPerMinute) + ' minutes ago';\n    }\n\n    else if (elapsed < msPerDay) {\n        return Math.round(elapsed / msPerHour) + ' hours ago';\n    }\n\n    else if (elapsed < msPerMonth) {\n        return Math.round(elapsed / msPerDay) + ' days ago';\n    }\n\n    else if (elapsed < msPerYear) {\n        return Math.round(elapsed / msPerMonth) + ' months ago';\n    }\n\n    else {\n        return Math.round(elapsed / msPerYear) + ' years ago';\n    }\n}\n\nexport { timeDifference };\n"
        }
    ]
}